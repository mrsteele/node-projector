<style>
  #cmdForm {
    text-align: right;
    padding: 5px;
    box-sizing: border-box;
  }

  #cmdForm textarea {
    height: 150px;
    width: 100%;
    box-sizing: border-box;
    font-size: inherit;
    margin-bottom: 10px;
    border: none;
    background: rgba(255, 255, 255, 0.9);
    outline: none;
    padding: 0.25em;
  }

  #cmdForm button {
    font-size: inherit;
    background: none;
    border: solid 1px #fff;
    color: inherit;
    cursor: pointer;
  }

  #cmdForm button:hover {
    background: #fff;
    color: #000;
  }

  body {
    padding: 5vh 5vw;
    box-sizing: border-box;
  }

  .container {
    max-width: 1200px;
    margin: 20px auto;
    box-sizing: border-box;
  }

  .col {
    width: 100%;
    box-sizing: border-box;
  }

  .sidebar {
    background: rgba(255, 255, 255, 0.25);
    padding: 10px;
    box-sizing: border-box;
    margin-top: 20px;
  }

  .sidebar select {
    width: 100%;
  }

  h1 {
    font-size: 3em;
    width: 100%;
    border-bottom: solid 1px #fff;
    padding-bottom: 0.5em;
    margin-bottom: 0.5em;
  }

  h2 {
    margin-top: 0;
  }

  @media (min-width:600px) {
    .container {
      display: flex;
    }

    .sidebar {
      margin-left: 20px;
      max-width: 300px;
    }
  }
</style>

<div class="container">
  <h1>projector.io Command Center</h1>
</div>
<div class="container">
  <div class="col">
    <form id="cmdForm">
      <h2 style="text-align: left;">New Message</h2>
      <textarea id="cmd" placeholder="Type message here..."></textarea><br />
      <button onclick="clearScreen">Clear Screen</button>
      <button>Send</button>
    </form>
  </div>
  <div class="col sidebar">
    <h2>Tools</h2>
    <p>
      <strong id="connectedClients"></strong> connected clients
    </p>
    <p>
      <label>Past Commands (<span id="cmdListCount">0</span>)
        <select id="cmdList">
          <option value="" disabled selected>...</option>
        </select>
      </label>
    </p>
  </div>
</div>

<script src="/socket.io/socket.io.js"></script>
<script>
  var socket = io();
  var commands = [];
  function syncCommands() {
    var i = commands.length - 1;
    var newVal = commands[i];
    var val = (newVal.length > 25) ? newVal.substring(0, 25) + '...' : newVal;
    cmdListCount.innerHTML = commands.length;
    cmdList.innerHTML += '<option value="' + i +'">' + val + '</option>';
  }

  function clearScreen() {
    socket.emit('cmd', '');
  }

  cmdList.onchange = function () {
    cmd.value = commands[parseInt(cmdList.value)];
  };

  cmdForm.onsubmit = function (e) {
    e.preventDefault();
    socket.emit('cmd', cmd.value);
    if (commands.indexOf(cmd.value) === -1) {
      commands.push(cmd.value);
      syncCommands();
    }
    cmd.value = '';
    return false;
  };

  socket.on('clientcount', function (count) {
    connectedClients.innerHTML = count
  });
</script>
